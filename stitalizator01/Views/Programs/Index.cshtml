@model IEnumerable<stitalizator01.Models.Program>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string tvDateStr = "";
    tvDateStr = ViewBag.curDate;
}


@using (Html.BeginForm("Index", "Programs", FormMethod.Get))
{
    <fieldset>
        <h2 style="padding-left:20px">Программы на <input name="date" type="date" id="broadcast_datepicker" class="datepickers" required="required" value="@tvDateStr" onchange="form.submit();" /></h2>
    </fieldset>
}
<p>
    @Html.ActionLink("Добавить программу вручную", "Create")
</p>
<p>
    <span id="clearProgListButton" class="btn btn-danger btn-lg glyphicon glyphicon-trash" onclick="ClearProgs()"></span> Удалить ненужное
    @*Html.ActionLink("Удалить все ненужное", "Clear", new { date = tvDateStr })*@
</p>

<form id="schedDownloadForm">
    <label id="checkBoxesLabel">Каналы</label>
    <p>
        @Html.Action("ChannelCheckBoxes", "Channels")
    </p>
    <label>Время выхода программы</label>
    <div class="input-group input-group-lg">
        <span class="input-group-addon" id="sizing-addon1">С</span>
        <input id="progTimeFrom" type="text" class="form-control" aria-describedby="sizing-addon1" value="19:00">
    </div>    
    <div class="input-group input-group-lg">
        <span class="input-group-addon" id="sizing-addon2">По</span>
        <input id="progTimeTo" type="text" class="form-control" aria-describedby="sizing-addon1" value="23:00">
    </div>

    <p>        
            <span id=" updateproglistbutton" class="btn btn-info btn-lg glyphicon glyphicon-cloud-download" onclick="downloadSchedule()"></span> Подгрузить расписание        
    </p>
</form>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.IsBet)
        </th>        
        <th class="hidden-xs">
            @Html.DisplayNameFor(model => model.ChannelCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProgTitle)
        </th>
        <th>
            Лошадка
        </th>
        <th class="visible-lg">
            @Html.DisplayNameFor(model => model.TvDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeStart)
        </th>
        <th class="visible-lg">
            @Html.DisplayNameFor(model => model.TimeEnd)
        </th>
        <th class="visible-lg">
            @Html.DisplayNameFor(model => model.ProgDescr)
        </th>
        <th class="visible-lg">
            @Html.DisplayNameFor(model => model.ProgCat)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ShareStiPlus)
        </th>

        <th class="visible-lg"></th>
    </tr>

@foreach (var model in Model) {    
    string tempBet = model.ShareStiPlus.ToString().Replace(",", ".");
    int curProgId = model.ProgramID;
    <tr>
        <td>
        @using (Html.BeginForm("UpdateBet", "Programs", new { id = model.ProgramID}))
            {
            @Html.AntiForgeryToken()            
            @Html.CheckBoxFor(modelItem => model.IsBet, new { onclick = "updateBet(" + model.ProgramID + ");" })             
        }
 
        </td>
        <td class="hidden-xs">
            @Html.DisplayFor(modelItem => model.ChannelCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => model.ProgTitle)
        </td>
        <td>
            @if (model.IsHorse)
            {
                <img class="programListHorseIcon" src="~/Content/Img/horseIcon.png" />
            }
        </td>
        <td class="visible-lg">
            @Html.DisplayFor(modelItem => model.TvDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => model.TimeStart)
        </td>
        <td class="visible-lg">
            @Html.DisplayFor(modelItem => model.TimeEnd)
        </td>
        <td class="visible-lg">
            @Html.DisplayFor(modelItem => model.ProgDescr)
        </td>
        <td class="visible-lg">
            @Html.DisplayFor(modelItem => model.ProgCat)
        </td>
        <td>                      
            <input class="input-lg" id="@curProgId" type="number" min="0" max="100" value="@tempBet" step="0.1" onchange="updateProgResult(@curProgId)" />   
        </td>
        <td class="visible-lg">
            @Html.ActionLink("Edit", "Edit", new { id = model.ProgramID }) |
            @Html.ActionLink("Details", "Details", new { id = model.ProgramID }) |
            @Html.ActionLink("Delete", "Delete", new { id = model.ProgramID }) |
            <p onclick="updateBetsUsers(@curProgId)">Update all users</p>
            
        </td>
    </tr>
}

</table>


@section scripts {
    <script>

        function updateBetsUsers(curId) {            
            $.ajax({
                url: '@Url.Action("updateBetsUsers", "Programs")',
                type: "POST",
                dataType: "text",
                data: {
                    id: curId
                },
                success: function (data) { console.log("success"); }//document.write(data); }
            });
        };

        function ClearProgs() {
            document.getElementById('overlayDiv').style.display = "block";
            var curDate = document.getElementById("broadcast_datepicker").value.toString("yyyy-MM-dd");
            $.ajax({
                url: '@Url.Action("Clear", "Programs")',
                type: "GET",
                dataType: "text",
                data: {
                    date: curDate
                },
                success: function (data) { console.log(data); location.reload(); }//document.write(data); }
            });
        };

        function downloadSchedule() {
            document.getElementById('overlayDiv').style.display = "block";



        var timeFromStr = document.getElementById("progTimeFrom").value;
        if (timeFromStr.indexOf(":") > 0) {
            timeFromStr = timeFromStr.substr(0, timeFromStr.indexOf(":"));
        }
        var timeToStr = document.getElementById("progTimeTo").value;
        if (timeToStr.indexOf(":") > 0) {
            timeToStr = timeToStr.substr(0, timeToStr.indexOf(":"));
        }
        var timeFilter = timeFromStr + "-" + timeToStr;
        var curDate = document.getElementById("broadcast_datepicker").value.toString("yyyy-MM-dd");
        var cbs = document.getElementsByClassName("channelCb");
        var chList = "";
        for (i = 0; i < cbs.length; i++) {
            if (cbs[i].checked) {
                chList += cbs[i].id;
                if (i != cbs.length - 1) {
                    chList += ";";
                }
            }
        }

        console.log(chList);

            $.ajax({
                url: '@Url.Action("ProgsByDate", "Programs")',
                type: "GET",
                dataType: "text",
                data: {
                    date: curDate,
                    channelsListStr: chList,
                    filter: timeFilter
                },
                success: function (data) { console.log(data); location.reload(); }//document.write(data); }
        });

    };


    function updateResult() {
        console.log("here we are");
        var formData = new FormData(this);

        $.ajax({
            url: '@Url.Action("enterResult", "Programs")',
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: formData,
            contentType: false,
            processData: false,
            success: function (result) {
                console.log("success!");
                console.log("result: " + result);// here in result you will get your data
                //       e.preventDefault();
            },
            error: function (result) {
                console.log("error: " + result.error);
                console.log("result: " + result);
            }
        });
        //e.preventDefault();
    };



    function updateBet(curId) {
        //console.log("initial: " + curId);
        $.ajax({
            url: 'Programs/UpdateBet',
            type: 'POST',
            data: { id: curId },
            success: function (msg) {
                // console.log(msg);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(XMLHttpRequest.responseText);
            }
        });
    }



    function updateProgResult(progID) {
        var curProg = document.getElementById(progID);

        console.log("curProg.value: "+curProg.value);
        $.ajax({
            url: 'Programs/enterSingleResult',
            type: 'POST',
            data: {
                ProgramID: progID,
                ShareSTIplus: curProg.value
                },
            success: function (data) {console.log(data);},
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(XMLHttpRequest.responseText);
            }
        });
    }


    </script>
}
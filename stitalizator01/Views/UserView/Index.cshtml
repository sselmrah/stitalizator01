@model stitalizator01.Models.GroupedUserViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string roles = "";
}

<table id="searchResultTable">
    <thead>
        <tr>
            <th>Имя пользователя</th>
            <th>Роли</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.Username</td>
                <td>
                    @if (user.Roles.Count > 0)
                    {
                        roles = "";
                        foreach (var role in user.Roles)
                        {
                            roles += role + ", ";
                        }
                        roles = roles.Substring(0, roles.Length - 2);
                    }
                    else
                    {
                        roles = "";
                    }
                    @roles
                </td>
          
                <td>
                   
                    <a href="#" data-username="@user.Username" class="btn btn-danger btn-sm">
                        <span class="glyphicon glyphicon-remove-circle"></span> Удалить пользователя
                    </a>
                        
                </td>
          
                <td>

                    <a href="#" data-username="@user.Username" class="btn btn-info btn-sm">
                        <span class="glyphicon glyphicon-remove-circle"></span> Изменить e-mail
                    </a>

                </td>
             <td>

                 <a href="#" data-username="@user.Username" class="btn btn-default btn-sm">
                     <span class="glyphicon glyphicon-fast-forward"></span> Создать ставки
                 </a>

             </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(".btn-default").click(function () {
        curObj = event.target;
        var userName = curObj.getAttribute("data-username");
        
            $.ajax({
                type: 'GET',
                cache: false,
                data: {
                    userName: userName
                },
                url: '/UserView/updateBets',
                success: function (data) {
                    location.reload();
                    console.log(data);
                }
            });
    });


    $(".btn-danger").click(function () {
        curObj = event.target;
        var userName = curObj.getAttribute("data-username");
        var r = confirm("Удалить пользователя " + userName +"?");
        if (r == true) {
            $.ajax({
                type: 'GET',
                cache: false,
                data: {
                    userName: userName
                },
                url: '/UserView/Delete',
                success: function (data) {
                    location.reload();
                    console.log("Пользователь " + userName + " успешно удален.");

                }
            });
        } else {
            console.log("You pressed Cancel!");
        }
    });

    $(".btn-info").click(function () {
        curObj = event.target;
        var userName = curObj.getAttribute("data-username");
        var newEmail = prompt("Введите новый email для пользователя " + userName, "");
        if (newEmail.indexOf('@@',0) > 0) 
        {
            $.ajax({
                type: 'GET',
                cache: false,
                data: {
                    userName: userName,
                    newEmail: newEmail
                },
                url: '/UserView/ChangeEmail',
                success: function (data) {
                    location.reload();
                    console.log("Новый почтовый адрес пользователя " + userName + ": " + newEmail);
                }
            });
        } else {
            console.log("You pressed Cancel!");
        }
    });

</script>
@*foreach (var user in Model.Users)
    {
        <p>
            <a href="@Url.Action("ViewRightsByUser", "UserView", new { userName = @user.Username }, null)">
                <strong>@user.Username</strong>
            </a>
                @foreach (var role in user.Roles)
                {
                    <p>@role</p>
                }
        </p>
    }*@

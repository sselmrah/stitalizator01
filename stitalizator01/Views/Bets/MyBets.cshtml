@model IEnumerable<stitalizator01.Models.Bet>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var curDate = ViewData["curDate"];
    var tableTitle = ViewData["tTitle"];
}

@if (this.User.IsInRole("Admin"))
{
    <h2>@tableTitle</h2>
}
else
{
    <h2>@tableTitle для пользователя @User.Identity.Name</h2>
}

<p>
    @Html.ActionLink("Посмотреть все непроставленные ставки", "MyBets", new { filter = "empty" })
</p>




@using (Html.BeginForm("MyBets", "Bets", FormMethod.Get))
{
    <fieldset>
        
        <input type="hidden" value="emptybydate" name="filter" />
        <p>Посмотреть непроставленные ставки на <input name="date" type="date" id="bets_datepicker" class="datepickers" required="required" value="@curDate" onchange="form.submit();" /></p>        
    </fieldset>
}

@using (Html.BeginForm("MyBets", "Bets", FormMethod.Get))
{
    <fieldset>        
        <input type="hidden" value="allbydate" name="filter" />
        <p>Посмотреть все ставки на <input name="date" type="date" id="bets_datepicker" class="datepickers" required="required" value="@curDate" onchange="form.submit();" /></p>        
    </fieldset>
}

<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.Program.TvDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Program.ChannelCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Program.ProgTitle)

        </th>
        @if (this.User.IsInRole("Admin"))
        {
            <th>
                Пользователь
            </th>
        }
        <th>
            Ставка СТИ+
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Program.ShareStiPlus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ScoreClassic)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ScoreOLS)
        </th>
@*
    <th>
        @Html.DisplayNameFor(model => model.PeriodID)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.ScoreOLS)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.ScoreClassic)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.AttemptNo)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.TimeStamp)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.IsHorse)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.BetRus18)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.BetMos18)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.BetSTImob)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.BetSTI)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.BetSTIplus)
    </th>
    *@
    @*<th>
        @Html.DisplayNameFor(model => model.UserID)
    </th>
*@
        <th></th>
    </tr>

@foreach (var model in Model) {

    int curBetID = model.BetID;
    string tempBet = model.BetSTIplus.ToString().Replace(",", ".");
    if (tempBet == "0") { tempBet = ""; }

    <tr>
        <td>
            @{
                if (model.IsLocked)
                {
                    <span class="glyphicon glyphicon-lock"></span>
                }
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => model.Program.TvDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => model.Program.ChannelCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => model.Program.ProgTitle)
        </td>
        @if (this.User.IsInRole("Admin"))
        {
            <td>
                @Html.DisplayFor(modelItem => model.ApplicationUser.UserName)
            </td>
        }
        <td>
            @*using (Html.BeginForm("MakeBets", "Bets", FormMethod.Post))*@
            @*
            @using(Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                if (model.IsLocked &! this.User.IsInRole("Admin"))
                { 
                @Html.DisplayFor(modelItem => model.BetSTIplus)                    
                }
                else 
                { 
                @Html.EditorFor(modelItem => model.BetSTIplus)                
                }
                @Html.Hidden("BetID", model.BetID)
                @Html.Hidden("PeriodID", model.PeriodID)
                @Html.Hidden("ScoreOLS", model.ScoreOLS)
                @Html.Hidden("ScoreClassic", model.ScoreClassic)
                @Html.Hidden("AttemptNo", model.AttemptNo)
                @Html.Hidden("TimeStamp", model.TimeStamp)
                @Html.Hidden("IsHorse", model.IsHorse)
                @Html.Hidden("BetRus18", model.BetRus18)
                @Html.Hidden("BetMos18", model.BetMos18)
                @Html.Hidden("BetSTImob", model.BetSTImob)
                @Html.Hidden("BetSTI", model.BetSTI)                
                @Html.Hidden("ProgramID", model.ProgramID)    
                @Html.Hidden("IsLocked", model.IsLocked)
                if (!model.IsLocked)
                {<input type="submit" value="Сохранить" class="btn btn-default" />}
            }
              *@
            <div class="input-group">
                <input class="input-lg" id="@curBetID" type="number" min="0" max="100" value="@tempBet" step="0.5" onchange="updateBetMyBets(@curBetID)" />
                @if (model.BetSTIplus > 0)
                {
                    <span onclick="updateBetMyBets(@curBetID)">
                        <a id="a_@curBetID" href="" class="btn btn-info btn-lg">
                            <span class="glyphicon glyphicon-pencil"></span> Изменить
                        </a>
                    </span>
                }
                else
                {
                    <span onclick="updateBetMyBets(@curBetID)">
                        <a id="a_@curBetID" href="" class="btn btn-danger btn-lg">
                            <span class="glyphicon glyphicon-question-sign"></span>@* Поставить*@
                        </a>
                    </span>
                }

            </div>
        </td>
        <td>
            @Html.DisplayFor(modelItem => model.Program.ShareStiPlus)
        </td>
        <td>
            @Html.DisplayFor(modelItem => model.ScoreClassic)
        </td>
        <td>
            @Html.DisplayFor(modelItem => model.ScoreOLS)
        </td>
        @*
        <td>
            @Html.DisplayFor(modelItem => item.PeriodID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ScoreOLS)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ScoreClassic)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AttemptNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeStamp)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsHorse)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BetRus18)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BetMos18)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BetSTImob)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BetSTI)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BetSTIplus)
        </td>
            *@
        @*
        <td>
            @Html.DisplayFor(modelItem => item.UserID)
        </td>
            *@
        <td>            
            @Html.ActionLink("Подробнее", "Details", new { id=model.BetID })
        </td>
    </tr>
}

</table>

<script>
function updateBetMyBets(betID) {
        var curBet = document.getElementById(betID);
        var curButton = document.getElementById("a_"+betID);
        console.log("curBet.value: "+curBet.value);
        $.ajax({
            url: 'HomePageBets',
            type: 'POST',
            data: {
                betId: betID,
                BetSTIplus: curBet.value
                },
            success: function (msg) {
                if (curBet.value>0)
                {
                    console.log("IsHorseNow: " + msg);
                    curButton.classList = "btn btn-success btn-lg";
                    curButton.innerHTML = "<span class=\"glyphicon glyphicon-ok-circle\"></span> Принято!";

                    setTimeout(function () {
                        curButton.classList = "btn btn-info btn-lg";
                        curButton.innerHTML = "<span class=\"glyphicon glyphicon-pencil\"></span> Изменить";
                    }, 3000);
                    
                }
                else
                {
                    console.log("IsHorseNow: " + msg);
                    curButton.classList = "btn btn-danger btn-lg";
                    curButton.innerHTML = "<span class=\"glyphicon glyphicon-question-sign\"></span>@* Поставить*@";
                    }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log(XMLHttpRequest.responseText);
                    }
                    });
    }

</script>